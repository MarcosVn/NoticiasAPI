#!/usr/bin/env node

const app = require('../app');
const http = require('http');
const config = require('../configurations/Application');
const server = http.createServer(app);

const onError = (error) => {
  if(error.syscall !== 'listen') throw error;

  let bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`;

  switch (error.code) {
    case 'EACCES':
      console.error(bind, 'requires privileges');
      process.exit(1);
    case 'EADDRINUSE':
      console.error(bind, 'is already in use');
      process.exit(1);
    default:
      throw error;
  }
}

const onListening = () => {
  let addr = server.address();
  let bind = typeof addr === 'string' ? `pipe ${addr}` : `port ${addr.port}`;
  console.log(`Listening on ${bind}`);
}

server.listen(process.env.PORT || config.PORT);
server.on('error', onError);
server.on('listening', onListening);

